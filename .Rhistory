plot(nuovi_casi_testati ~ data, data=covidLuglio, type="p")
# morti/positivi
plot(covidLuglio$nuovi_decessi/covidLuglio$nuovi_positivi); tail(covidLuglio$deceduti)
# rapporto ricoveri per positivi
covidLuglio$nuovi_ricoveri<-(covidLuglio$ricoverati_con_sintomi) - lag(covidLuglio$ricoverati_con_sintomi, 1)
tail(covidLuglio$nuovi_ricoveri)
xyplot((nuovi_ricoveri/nuovi_positivi)*100~ data, data=covidLuglio, type=c("p","smooth"))
library(mosaicCalc)
xyplot((nuovi_ricoveri/nuovi_positivi)*100~ data, data=covidLuglio, type=c("p","smooth"))
xyplot((nuovi_ricoveri/nuovi_positivi)*100~ data, data=covidLuglio[20:40,], type=c("p","smooth"))
### Dati ----
covid<-read.csv("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv")
covid$data<-as.Date.character((covid$data), "%Y-%m-%d")
covid$data<-as.numeric((covid$data))
plot(totale_positivi ~ data, data=covid); tail(covid$totale_positivi,1)
model <- lm(ricoverati_con_sintomi ~ data, data=covid); summary(model)
g <- makeFun(model); g
# tamponi e tasso positività testati
covid$nuovi_casi_testati<-(covid$casi_testati) - lag(covid$casi_testati, 1); tail(covid$nuovi_casi_testati)
plot( (covid$nuovi_positivi/covid$nuovi_casi_testati)*100 ,data=covid, type="l" ,
ylab="Positive rate for tested cases", xlab="days",
main="Positives for tested cases since the beginning of the epidemics in Italy")
library(dplyr)
library(mosaicCalc)
plot( (covid$nuovi_positivi/covid$nuovi_casi_testati)*100 ,data=covid, type="l" ,
ylab="Positive rate for tested cases", xlab="days",
main="Positives for tested cases since the beginning of the epidemics in Italy")
# tamponi e tasso positività testati
covid$nuovi_casi_testati<-(covid$casi_testati) - lag(covid$casi_testati, 1); tail(covid$nuovi_casi_testati)
plot( (covid$nuovi_positivi/covid$nuovi_casi_testati)*100 ,data=covid, type="l" ,
ylab="Positive rate for tested cases", xlab="days",
main="Positives for tested cases since the beginning of the epidemics in Italy")
# deceduti
covid$nuovi_decessi<-(covid$deceduti) - lag(covid$deceduti, 1); tail(covid$nuovi_decessi)
plot(tail((covid$nuovi_decessi/covid$nuovi_positivi)*100,20), data=covid, ylab="Deaths per 100 positives")
# vaccini
vaccini<-read.csv("https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/anagrafica-vaccini-summary-latest.csv")
totvaccinati<-sum(vaccini$seconda_dose); totvaccinati
# Luglio
covidLuglio<-covid[c(494:dim(covid)),]
covidLuglio$data<-as.numeric((covidLuglio$data))
covidLuglio$data<-((covidLuglio$data-18807))
# positivi / casi testati
tail(covidLuglio$nuovi_positivi)
covidLuglio$pos_casi_testati<-(covidLuglio$nuovi_positivi/covidLuglio$nuovi_casi_testati)*100
plot( covidLuglio$pos_casi_testati~ data, covidLuglio, type=c("o") ,
ylab="Positive rate for tested cases", xlab="days",main="Positive per tested case since july")
# ricoveri
plot(ricoverati_con_sintomi ~ data, data=covidLuglio, type="p")
#casi testati
plot(nuovi_casi_testati ~ data, data=covidLuglio, type="p")
library(mosaicCalc)
xyplot( ((covidLuglio$nuovi_positivi/covidLuglio$nuovi_casi_testati)*100)~ data,
ylab="Positive rate for tested cases", xlab="Days of July",
data=covidLuglio, type=c("p","smooth" ))
# morti/positivi
plot(covidLuglio$nuovi_decessi/covidLuglio$nuovi_positivi); tail(covidLuglio$deceduti)
# rapporto ricoveri per positivi
covidLuglio$nuovi_ricoveri<-(covidLuglio$ricoverati_con_sintomi) - lag(covidLuglio$ricoverati_con_sintomi, 1)
tail(covidLuglio$nuovi_ricoveri)
xyplot((nuovi_ricoveri/nuovi_positivi)*100~ data, data=covidLuglio, type=c("p","smooth"))
View(covid)
library("googlesheets4")
library("dplyr")
library(forecast)
library(MASS)
library(car)
library(gvlma)
library(ggplot2)
library(lubridate)
library(ggm)
library(tseries)
library(tidyr)
library(caret)
options("scipen"=999)
library(magrittr)
library(gnm)
require(survival)
library(glarma)
library(zoo)
library(gam)
library(lme4)
library(Hmisc)
### Dati ----
dati= read_sheet("https://docs.google.com/spreadsheets/d/1_nwEC8fbTP_YtyYhtZyU39nX-jnLloRuSG5sRTvYrTc/edit#gid=0")
colnames(dati)
dati <- dati %>% rename( "MaxCO2nightexcl"="MaxCO2 night excl"  )
dati$Migraine<-as.factor(dati$Migraine)
dati$MigraineIntensity<-as.numeric(dati$MigraineIntensity)
dati$MaxCO2nightexcl<-as.numeric(dati$MaxCO2nightexcl)
dati$Mese<- as.yearmon(dati$Date, format = "%d/%m/%Y")
dati$Mese<-as.factor(format(dati$Mese,"%m"))
datiPuliti<-(dati[308:795,c(1,14,15,17,19,18,31)]); sum(is.na(datiPuliti))
datiPuliti<-na.omit(datiPuliti)
datiPuliti$UniClass<-ifelse(datiPuliti$UniClass!="0",1,0); sum(datiPuliti$UniClass) #23 eventi, ok
#datiPuliti$MigraineIntensity<-as.factor(datiPuliti$MigraineIntensity)
datiPuliti$Date=as.Date(datiPuliti$Date,format = "%Y/%m/%d");
summary(datiPuliti)
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity)
colnames(dati)
datiPuliti<-(dati[308:968,c(1,14,15,16,18,19,20,24,31)]); sum(is.na(datiPuliti))
datiPuliti<-na.omit(datiPuliti)
datiPuliti$UniClass<-ifelse(datiPuliti$UniClass!="0",1,0); sum(datiPuliti$UniClass) #23 eventi, ok
#datiPuliti$MigraineIntensity<-as.factor(datiPuliti$MigraineIntensity)
datiPuliti$Date=as.Date(datiPuliti$Date,format = "%Y/%m/%d");
summary(datiPuliti)
datiPuliti<-(dati[308:968,c(1,14,15,16,18,19,20,24,33)]); sum(is.na(datiPuliti))
datiPuliti<-na.omit(datiPuliti)
datiPuliti$UniClass<-ifelse(datiPuliti$UniClass!="0",1,0); sum(datiPuliti$UniClass) #23 eventi, ok
#datiPuliti$MigraineIntensity<-as.factor(datiPuliti$MigraineIntensity)
datiPuliti$Date=as.Date(datiPuliti$Date,format = "%Y/%m/%d");
summary(datiPuliti)
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity)
pairs(datiPuliti, panel=panel.smooth)
library(mosaicCalc)
xyplot(MigraineIntensity ~ data, data=dati, main="Date and migraine intensity",
ylab="migraine intensity",
type=c("p")
, grid=TRUE, abline = list(v = 15.36), xlab="Days of July")
xyplot(MigraineIntensity ~ Date, data=dati, main="Date and migraine intensity",
ylab="migraine intensity",
type=c("p")
, #abline = list(v = 15.36),
xlab="Date")
xyplot(MigraineIntensity ~ Date, data=dati, main="Date and migraine intensity",
ylab="migraine intensity",
type=c("p","s")
, #abline = list(v = 15.36),
xlab="Date")
xyplot(MigraineIntensity ~ Date, data=dati, main="Date and migraine intensity",
ylab="migraine intensity",
type=c("p","smooth")
, #abline = list(v = 15.36),
xlab="Date")
xyplot(MigraineIntensity ~ Date, data=dati, main="Date and migraine intensity",
ylab="migraine intensity",
type=c("p","smooth","o")
, #abline = list(v = 15.36),
xlab="Date")
### Inferenza non comune ----
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$MaxCO2nightexcl = NULL,
alternative = c("two.sided", "less", "greater"),
mu = 0, paired = FALSE, exact = NULL, correct = TRUE,
conf.int = FALSE, conf.level = 0.95)
### Inferenza non comune ----
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$MaxCO2nightexcl)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$Stress)
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$Physical_activity)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$Date)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$UniClass)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$Mese)
wilcox.test(datiPuliti$MigraineIntensity, as.numeric(datiPuliti$Mese))
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$Starnuti)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$MaxCO2nightexcl, formula= MigraineIntesnity~MaxCO2nightexcl*Stress*UniClass+Date+Mese)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$MaxCO2nightexcl, formula= MigraineIntesnity~MaxCO2nightexcl+Stress+UniClass+Date+Mese)
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$MaxCO2nightexcl, formula= MigraineIntesnity~MaxCO2nightexcl+Stress)
datiPuliti<-(dati[308:968,c(1,14,15,16,18,19,20,24,33)]); sum(is.na(datiPuliti))
colnames(dati)
datiPuliti<-(dati[308:968,c(1,14,15,16,18,19,20,24,33)]); sum(is.na(datiPuliti))
datiPuliti<-na.omit(datiPuliti)
datiPuliti<-(dati[308:968,c(1,14,15,16,18,19,20,24,33)]); sum(is.na(datiPuliti))
datiPuliti<-(dati[308:968,c(1,15,16,18,19,20,24,33)]); sum(is.na(datiPuliti))
datiPuliti<-na.omit(datiPuliti)
datiPuliti$UniClass<-ifelse(datiPuliti$UniClass!="0",1,0); sum(datiPuliti$UniClass) #23 eventi, ok
#datiPuliti$MigraineIntensity<-as.factor(datiPuliti$MigraineIntensity)
datiPuliti$Date=as.Date(datiPuliti$Date,format = "%Y/%m/%d");
summary(datiPuliti)
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity) #dati non distribuiti normalmente
pairs(datiPuliti, panel=panel.smooth)
xyplot(MigraineIntensity ~ Date, data=dati, main="Date and migraine intensity",
ylab="migraine intensity",
type=c("p","smooth","o")
, #abline = list(v = 15.36),
xlab="Date")
corrgram(datiPuliti,lower.panel = panel.cor,
cex=1, cex.labels = 1,  na.action = na.omit)
### Correlazioni: i risultati cambiano se passo da variabili obiettivo numeric a factor ----
require(corrgram)
corrgram(datiPuliti,lower.panel = panel.cor,
cex=1, cex.labels = 1,  na.action = na.omit)
parcor(var(datiPuliti[,c(3,4,5,6)]))
parcor(var(datiPuliti[,c(3,4,5,6,7)]))
### Autocorrelazione -----
pacf(datiPuliti, lag.max = 10 ) # non emerge nulla
wilcox.test(datiPuliti$MigraineIntensity~datiPuliti$MaxCO2nightexcl) #molto significativo
wilcox.test(datiPuliti$MigraineIntensity~datiPuliti$Stress) #uguale a quello sopra
wilcox.test(datiPuliti$MigraineIntensity~datiPuliti$Physical_activity) # 0.002263
wilcox.test(datiPuliti$MigraineIntensity~datiPuliti$UniClass) # 0.002263
wilcox.test(datiPuliti$MigraineIntensity~(datiPuliti$Mese)) #0.00000000000000022
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$Starnuti) # p-value = 0.00000000000001413, mah
wilcox.test(datiPuliti$MigraineIntensity, datiPuliti$MaxCO2nightexcl, formula= MigraineIntesnity~MaxCO2nightexcl+Stress)
wilcox.test(datiPuliti$MigraineIntensity~datiPuliti$MaxCO2nightexcl) #molto significativo
wilcox.test(datiPuliti$MigraineIntensity~datiPuliti$Physical_activity) # 0.002263
wilcox.test(datiPuliti$MigraineIntensity~datiPuliti$UniClass) # 0.002263
wilcox.test(datiPuliti$MigraineIntensity,(datiPuliti$Mese)) #0.00000000000000022
wilcox.test(datiPuliti$MigraineIntensity,as.numeric(datiPuliti$Mese)) #0.00000000000000022
glm <- glm(as.factor(Migraine)~MaxCO2nightexcl*Stress*UniClass+Date+Mese,data=datiPuliti, family="binomial") #Senza binomial dà errore fit perché Migraine risulta factor
# Modello BASE INFERENZIALE -----
datiPuliti$Migraine<-as.factor(ifelse(datiPuliti$MigraineIntensity>1,1,0)) #senza di questo, nessuna significatività
glm <- glm(as.factor(Migraine)~MaxCO2nightexcl*Stress*UniClass+Date+Mese,data=datiPuliti, family="binomial") #Senza binomial dà errore fit perché Migraine risulta factor
anova(glm)
glm <- glm(as.factor(Migraine)~MaxCO2nightexcl*Stress*UniClass+Date+Mese,data=datiPuliti, family="binomial") #Senza binomial dà errore fit perché Migraine risulta factor
anova(glm)
summary(glm); exp(glm1$coefficients)#non conviene interazione
# Modello BASE INFERENZIALE LM -----
lm1 <- lm(MigraineIntensity~MaxCO2nightexcl*Stress*UniClass+Date+Mese,data=datiPuliti, family="binomial")
anova(lm1)
summary(lm1);
drop1(lm1, test="F")
# Modello BASE INFERENZIALE LM -----
lm1 <- lm(MigraineIntensity~MaxCO2nightexcl*Stress*UniClass+Date+Mese,data=datiPuliti, family="poisson")
anova(lm1)
summary(lm1);
drop1(lm1, test="F")
plot(lm1$residuals)
### Modello INFERENZIALE usando factor per CO2 ----
glmF <- glm(as.factor(Migraine)~as.factor(MaxCO2nightexcl)+UniClass+Date,data=datiPuliti, family="binomial") #Senza binomial dà errore fit perché Migraine risulta factor
summary(glmF); #Non serve
drop1(glm, test="wilcox")
drop1(glm, test="Rao")
drop1(glm, test="none")
drop1(glm, test="F")
drop1(glm, test="F")
plot(glm$residuals)
drop1(glm, test="Chisq")
plot(glm$residuals)
# Modello BASE INFERENZIALE LM -----
lm1 <- lm(MigraineIntensity~MaxCO2nightexcl*Stress*UniClass+Date+Mese,data=datiPuliti, family="binomial")
anova(lm1)
summary(lm1);
drop1(lm1, test="F")
plot(lm1$residuals)
# Modello BASE INFERENZIALE LM -----
lm1 <- lm(MigraineIntensity~MaxCO2nightexcl*Stress*UniClass+Date+Mese,data=datiPuliti, family="binomial")
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity) #dati non distribuiti normalmente
table(datiPuliti$MigraineIntensity))
table(datiPuliti$MigraineIntensity)
library(dplyr)
datiPuliti %>% mutate( ints = cut(MaxCO2nightexcl ,breaks = 5)) %>%
group_by(MigraineIntensity) %>%
summarise( mean.v2 = mean(MigraineIntensity) )
datiPuliti %>% mutate( ints = cut(MaxCO2nightexcl ,breaks = 5)) %>%
group_by(ints) %>%
summarise( mean.v2 = mean(MigraineIntensity) )
datiPuliti %>% mutate( ints = cut(MaxCO2nightexcl ,breaks = 4)) %>%
group_by(ints) %>%
summarise( mean.v2 = mean(MigraineIntensity) )
datiPuliti %>% mutate( intervalli_CO2 = cut(MaxCO2nightexcl ,breaks = 4)) %>%
group_by(intervalli_CO2) %>%
summarise( mean.MigrInt = mean(MigraineIntensity) )
### Qualche descrittiva ----
table(datiPuliti$MigraineIntensity)
#Descrittiva: media intensità per intervallo di CO2
library(dplyr)
datiPuliti %>% mutate( intervalli_CO2 = cut(MaxCO2nightexcl ,breaks = 4)) %>%
group_by(intervalli_CO2) %>%
summarise( mean.MigrInt = mean(MigraineIntensity) )
datiPuliti %>% mutate( intervalli_CO2 = cut(MaxCO2nightexcl ,breaks = 4)) %>%
group_by(intervalli_CO2) %>%
summarise( mean.MigrInt = median(MigraineIntensity) )
datiPuliti %>% mutate( intervalli_CO2 = cut(MaxCO2nightexcl ,breaks = 4)) %>%
group_by(intervalli_CO2) %>%
summarise( mean.MigrInt = mean(MigraineIntensity) )
xyplot(MigraineIntensity ~ Date, data=dati, main="Date and migraine intensity",
ylab="migraine intensity",
type=c("p","smooth","o")
, #abline = list(v = 15.36),
xlab="Date")
### Analisi temporale
datits<-ts(dati)
### Analisi temporale
datits<-ts(datiPuliti)
plot.ts(datits)
decompose(datits)
### Analisi temporale
datits<-ts(datiPuliti, n=2)
datits<-SMA(datiPuliti, n=2)
### Analisi temporale
library("TTR")
datits<-SMA(datiPuliti, n=2)
datits<-SMA(datiPuliti$MigraineIntensity, n=2)
plot.ts(datits)
decompose(datits)
datits<-SMA(datiPuliti$MigraineIntensity, n=4)
plot.ts(datits)
decompose(datits)
datits<-SMA(datiPuliti$MigraineIntensity, n=8)
plot.ts(datits)
datits<-SMA(datiPuliti$MigraineIntensity, n=1)
plot.ts(datits)
datits<-SMA(datiPuliti$MigraineIntensity, n=4)
plot.ts(datits)
decompose(datits)
plot(decompose(datits))
wilcox.test(datiPuliti$MigraineIntensity,datiPuliti$MaxCO2nightexcl) #molto significativo
wilcox.test(datiPuliti$MigraineIntensity,datiPuliti$Stress) #uguale a quello sopra
datits<-SMA(dati$MigraineIntensity, n=4)
datits<-SMA(datiPuliti$MigraineIntensity, n=4)
plot.ts(datits)
plot(decompose(datits))
datits<-SMA(datiPuliti$MigraineIntensity, n=5)
plot.ts(datits)
datits<-SMA(datiPuliti$MigraineIntensity, n=10)
plot.ts(datits)
datits<-SMA(datiPuliti$MigraineIntensity, n=7)
plot.ts(datits)
plot(decompose(datits))
datits<-SMA(datiPuliti$MigraineIntensity, n=4)
plot.ts(datits)
datits<-ts(datiPuliti$MigraineIntensity, frequency=4)
plot.ts(datits)
plot(decompose(datits))
datits<-ts(datiPuliti$MigraineIntensity, frequency=2)
plot.ts(datits)
plot(decompose(datits))
datits<-ts(datiPuliti$MigraineIntensity, frequency=365)
plot.ts(datits)
plot(decompose(datits))
datits<-ts(datiPuliti$MigraineIntensity, frequency=10)
plot.ts(datits)
plot(decompose(datits))
datits<-ts(datiPuliti$MigraineIntensity, frequency=30)
plot.ts(datits)
plot(decompose(datits))
plot.ts(datits)
lines(datiPuliti$Date, pred, col="blue")
fit.lm <- lm(MigraineIntensity~data*xc*xs=datiPuliti)
fit.lm <- lm(MigraineIntensity~data*xc*xs,data=datiPuliti)
xc<-cos(2*pi*Time/366)
xc<-cos(2*pi*datiPuliti$Date/366)
xs<-sin(2*pi*datiPuliti$Date/366)
fit.lm <- lm(MigraineIntensity~data*xc*xs,data=datiPuliti)
xc<-cos(2*pi*as.numeric(datiPuliti$Date)/366)
xs<-sin(2*pi*as.numeric(datiPuliti$Date)/366)
fit.lm <- lm(MigraineIntensity~data*xc*xs,data=datiPuliti)
fit.lm <- lm(MigraineIntensity~Date*xc*xs,data=datiPuliti)
plot(datits)
plot(xc, add=TRUE)
datits<-ts(datiPuliti$MigraineIntensity, frequency=1)
plot(datits)
plot(xc, add=TRUE)
xc<-cos(2*pi*as.numeric(datiPuliti$Date)/1)
plot(xc, add=TRUE)
xc<-cos(2*pi*as.numeric(datiPuliti$Date)/366)
plot(xc, add=TRUE)
plot(xc, add=TRUE)
plot(datits)
xc<-cos(2*pi*as.numeric(datiPuliti$Date)/366)
line(xc)
plot(xc, add=TRUE)
plotFun(xc, add=TRUE)
library(mosaicCalc)
library(manipulate)
library(calculus)
library("mosaic")
plotFun(xc, add=TRUE)
plot(datits)
plot(s(datits))
plotFun(s(datits))
plotFun(s(datits))
plotFun(s(datiPuliti$MigraineIntensity)~ Date)
plotFun(s(MigraineIntensity)~ Date, data=datiPuliti)
plotFun(MigraineIntensity~ Date, data=datiPuliti)
plot(MigraineIntensity~ Date, data=datiPuliti)
plot(MigraineIntensity~ Date, data=datiPuliti, type="smooth")
plotFun(MigraineIntensity~ Date, data=datiPuliti, type="smooth")
plot(MigraineIntensity~ Date, data=datiPuliti, type="smooth")
xc<-cos(2*pi*as.numeric(datiPuliti$Date)/366)
plot(xc, add=TRUE)
plot(MigraineIntensity~ Date, data=datiPuliti, type="smooth")
xc<-cos(2*pi*as.numeric(datiPuliti$Date)/366)
plot(MigraineIntensity~ sin(Date), data=datiPuliti, type="smooth")
plot(MigraineIntensity~ cos(Date), data=datiPuliti, type="smooth")
plot(MigraineIntensity~ cos(as.numeric(Date)), data=datiPuliti, type="smooth")
plot(MigraineIntensity~ sin(as.numeric(Date)), data=datiPuliti)
plot(MigraineIntensity~ cos(as.numeric(Date)), data=datiPuliti)
plot(MigraineIntensity~ (as.numeric(Date)), data=datiPuliti, type="smooth")
plot(MigraineIntensity~ Date, data=datiPuliti, type="smooth")
plot(xc, add=TRUE)
plot(MigraineIntensity~ MaxCO2nightexcl, data=datiPuliti, type="smooth")
datits<-ts(datiPuliti$MigraineIntensity, frequency=1)
datits<-ts(datiPuliti$MigraineIntensity, frequency=1)
plot(datits)
plot(decompose(datits))
datits<-ts(datiPuliti$MigraineIntensity, frequency=4)
plot(datits)
plot(decompose(datits))
datits<-ts(datiPuliti$MigraineIntensity, frequency=12)
plot(datits)
plot(decompose(datits))
library("googlesheets4")
library("dplyr")
library(forecast)
library(MASS)
library(car)
library(gvlma)
library(ggplot2)
library(lubridate)
library(ggm)
library(tseries)
library(tidyr)
library(caret)
options("scipen"=999)
library(magrittr)
library(gnm)
require(survival)
library(glarma)
library(zoo)
library(gam)
library(lme4)
library(Hmisc)
### Dati ----
dati= read_sheet("https://docs.google.com/spreadsheets/d/1_nwEC8fbTP_YtyYhtZyU39nX-jnLloRuSG5sRTvYrTc/edit#gid=0")
colnames(dati)
dati <- dati %>% rename( "MaxCO2nightexcl"="MaxCO2 night excl"  )
dati$Migraine<-as.factor(dati$Migraine)
dati$MigraineIntensity<-as.numeric(dati$MigraineIntensity)
dati$MaxCO2nightexcl<-as.numeric(dati$MaxCO2nightexcl)
dati$Mese<- as.yearmon(dati$Date, format = "%d/%m/%Y")
dati$Mese<-as.factor(format(dati$Mese,"%m"))
datiPuliti<-(dati[308:968,c(1,15,16,18,19,20,24,33)]); sum(is.na(datiPuliti))
datiPuliti<-na.omit(datiPuliti)
datiPuliti$UniClass<-ifelse(datiPuliti$UniClass!="0",1,0); sum(datiPuliti$UniClass) #23 eventi, ok
#datiPuliti$MigraineIntensity<-as.factor(datiPuliti$MigraineIntensity)
datiPuliti$Date=as.Date(datiPuliti$Date,format = "%Y/%m/%d");
summary(datiPuliti)
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity) #dati non distribuiti normalmente
pairs(datiPuliti, panel=panel.smooth)
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity) #dati non distribuiti normalmente
pairs(datiPuliti, panel=panel.smooth)
### Qualche descrittiva ----
table(datiPuliti$MigraineIntensity)
save.image("~/MigraineCO2Ambiente.RData")
### Qualche descrittiva ----
table(datiPuliti$MigraineIntensity); 564/dim(datiPuliti)
### Qualche descrittiva ----
table(datiPuliti$MigraineIntensity); 564/dim(datiPuliti$MigraineIntensity)
### Qualche descrittiva ----
table(datiPuliti$MigraineIntensity); 564/length(datiPuliti$MigraineIntensity)
### Qualche descrittiva ----
table(datiPuliti$MigraineIntensity); sum(datiPuliti$MigraineIntensity==0)/length(datiPuliti$MigraineIntensity)
### Power calculation -----
library(pwr)
install.packages("pwr")
### Power calculation -----
library(pwr)
pwr.anova.test(k=6, f=0.25, sig.level=0.05, power=0.8)
prob<-1-0.9067524
pwr.anova.test(k=6, f=prob, sig.level=0.05, power=0.8)
pwr.anova.test(k=6, f=prob, sig.level=0.05, power=0.9)
pwr.anova.test(k=6, f=prob, sig.level=0.05, power=0.99)
pwr.anova.test(k=6, f=prob, sig.level=0.05, power=0.80)
pwr.anova.test(k=10, f=prob, sig.level=0.05, power=0.80)
pwr.anova.test(k=2, f=prob, sig.level=0.05, power=0.80)
pwr.anova.test(k=1, f=prob, sig.level=0.05, power=0.80)
pwr.anova.test(k=10, f=prob, sig.level=0.05, power=0.80)
pwr.anova.test(k=10, f=03, sig.level=0.05, power=0.80)
pwr.anova.test(k=10, f=0.3, sig.level=0.05, power=0.80)
pwr.anova.test(k=10, f=0.03, sig.level=0.05, power=0.80)
pwr.anova.test(k=10, f=prob, sig.level=0.05, power=0.80)
hist(log(datiPuliti$MigraineIntensity+1))
### Qualche grafico ----
hist(datiPuliti$MigraineIntensity) #dati non distribuiti normalmente
pwr.anova.test(k=10, f=prob, sig.level=0.05, power=0.80)
pwr.f2.test(k=10, f=prob, sig.level=0.05, power=0.80)
plot(pwr.anova.test(k=10, f=prob, sig.level=0.05, power=0.80) )
plot(pwr.t.test(k=10, f=prob, sig.level=0.05, power=0.80))
power.prop.test(n=28,p1=0.3,p2=0.55)
plot(power.prop.test(n=28,p1=0.3,p2=0.55))
### Qualche descrittiva ----
table(datiPuliti$MigraineIntensity); sum(datiPuliti$MigraineIntensity==0)/length(datiPuliti$MigraineIntensity)
power.prop.test(n=622-564,p1=prob,p2=1-p2)
power.prop.test(n=622-564,p1=prob,p2=1-prob)
power.prop.test(n=622-564,p1=prob,p2=1-prob, power=0.8)
plot(pwr.anova.test(k=10, f=prob, sig.level=0.05, power=0.80))
save.image("~/MigraineCO2Ambiente.RData")
setwd("C:/Users/Gabriele/Documents/GitHub/StatComp2021")
load("StatComp2021.RData")
load("StatComp2021.RData")
# posso automatizzare?
library(dplyr)
descr<-skim(dati) #non userò le covariate con più missing >2000
library(forecast)
library(MASS)
library(car)
library(gvlma)
library(ggplot2)
library(tidyverse)
library(mctest)
library("skimr")
descr<-skim(dati) #non userò le covariate con più missing >2000
descr
hist(dati$drinks_day) #esponenziale negativissima
### Second model ----
# trasformo Y tramite log, tolgo variabili non significative
# tolgo intercetta, non ha senso
hist(log(dati$drinks_day+1)) #esponenziale negativissima
hist(dati$drinks_day) #esponenziale negativissima
hist(I(dati$drinks_day+1)^0.3)
hist(I(dati$drinks_day+1)^0.7)
hist(I(dati$drinks_day+1)^0.9)
hist(I(dati$drinks_day+1)^0.2)
hist(I(dati$drinks_day+1)^0.1)
cor(dati[,4:30])
